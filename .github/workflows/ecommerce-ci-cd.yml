# Name of the workflow (shows up in GitHub Actions UI)
name: E-Commerce Model CI/CD

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  

jobs:
  # ------------------------
  # 1. BUILD JOB
  # ------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Cache dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # ------------------------
  # 2. TEST JOB
  # ------------------------
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Reuse cached dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pi

      - name: Run Jupyter Notebook end-to-end
        run: |
          pip install pytest nbconvert papermill
          papermill notebooks/E_commerce_project.ipynb notebooks/output.ipynb

      - name: Run unit tests
        run: pytest tests/
          

  # ------------------------
  # 3. DEPLOY JOB
  # ------------------------
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Reuse cached dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Save trained model
        run: |
          mkdir -p artifacts
          python scripts/train_and_save.py  # Exports model.pkl
          cp notebooks/output.ipynb artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ecommerce-model
          path: artifacts/
